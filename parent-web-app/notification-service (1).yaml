openapi: 3.1.0
info:
  title: Notification Service
  description: Notification service for Educesol platform - handles emails, push notifications, and in-app notifications
  version: 0.0.0
tags:
  - name: Notifications
  - name: Email Notifications
  - name: Tags
  - name: Push Notifications
paths:
  /api/email/multiple:
    post:
      operationId: EmailNotifications_sendMultipleEmails
      description: Send email to multiple users
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Email Notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleEmailRequest'
  /api/email/single:
    post:
      operationId: EmailNotifications_sendSingleEmail
      description: Send email to a single user
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Email Notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SingleEmailRequest'
  /api/notifications/notifies/school:
    get:
      operationId: Notifications_getSchoolNotifications
      description: Get notifications for a school (requires school authentication)
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
          explode: false
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationListResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Notifications
    post:
      operationId: Notifications_createNotification
      description: Create a new notification (requires school authentication)
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotificationRequest'
  /api/notifications/notifies/school/{id}:
    get:
      operationId: Notifications_getNotificationById
      description: Get a specific notification by ID (requires school authentication)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Notifications
    patch:
      operationId: Notifications_updateNotification
      description: Update a notification (requires school authentication)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotificationRequest'
    delete:
      operationId: Notifications_deleteNotification
      description: Delete a notification (requires school authentication)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Notifications
  /api/notifications/notifies/user:
    get:
      operationId: Notifications_getUserNotifications
      description: Get notifications for a user (requires guardian authentication)
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationListResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Notifications
  /api/notifications/push/send:
    post:
      operationId: PushNotifications_sendPushNotification
      description: Send push notification
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Push Notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushNotificationRequest'
  /api/notifications/tags/school:
    get:
      operationId: Tags_getSchoolTags
      description: Get tags for a school (requires school authentication)
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagListResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Tags
    post:
      operationId: Tags_createTag
      description: Create a new tag (requires school authentication)
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Tags
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTagRequest'
  /api/notifications/tags/tag/{id}:
    get:
      operationId: Tags_getTagById
      description: Get a specific tag by ID (requires school authentication)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Tags
    patch:
      operationId: Tags_updateTag
      description: Update a tag (requires school authentication)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Tags
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTagRequest'
    delete:
      operationId: Tags_deleteTag
      description: Delete a tag (requires school authentication)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Tags
components:
  schemas:
    CreateNotificationRequest:
      type: object
      required:
        - tag
        - subject
        - receipient
        - body
      properties:
        tag:
          type: string
        subject:
          type: string
        receipient:
          type: string
        body:
          type: string
    CreateTagRequest:
      type: object
      required:
        - name
        - color
      properties:
        name:
          type: string
        color:
          type: string
    EmailResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
    ErrorResponse:
      type: object
      required:
        - success
        - message
      properties:
        success:
          type: boolean
        message:
          type: string
        code:
          type: integer
          format: int32
    MultipleEmailRequest:
      type: object
      required:
        - subject
        - email
        - message
      properties:
        subject:
          type: string
        email:
          type: array
          items:
            type: string
        message:
          type: string
    NotificationChannel:
      type: string
      enum:
        - EMAIL
        - PUSH
        - IN_APP
    NotificationData:
      type: object
      required:
        - id
        - tag
        - subject
        - receipient
        - body
        - sender
        - created_at
        - updated_at
      properties:
        id:
          type: string
        tag:
          type: string
        subject:
          type: string
        receipient:
          type: string
        body:
          type: string
        sender:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
    NotificationListResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/NotificationData'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
    NotificationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/NotificationData'
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
    PaginationMeta:
      type: object
      required:
        - total_pages
        - per_page
        - cur_page
      properties:
        total_pages:
          type: integer
          format: int32
        per_page:
          type: integer
          format: int32
        cur_page:
          type: integer
          format: int32
    PushNotificationRequest:
      type: object
      required:
        - userid
        - channel
        - created_on
        - read
        - title
        - message
      properties:
        userid:
          type: string
        channel:
          type: string
        created_on:
          type: string
        read:
          type: boolean
        title:
          type: string
        message:
          type: string
    SingleEmailRequest:
      type: object
      required:
        - name
        - email
        - subject
        - message
      properties:
        name:
          type: string
        email:
          type: string
        subject:
          type: string
        message:
          type: string
    SuccessResponse:
      type: object
      required:
        - success
        - message
      properties:
        success:
          type: boolean
        message:
          type: string
    TagData:
      type: object
      required:
        - id
        - name
        - color
        - schoolId
        - created_at
        - updated_at
      properties:
        id:
          type: string
        name:
          type: string
        color:
          type: string
        schoolId:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
    TagListResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TagData'
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
    TagResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TagData'
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
    UpdateNotificationRequest:
      type: object
      properties:
        tag:
          type: string
        subject:
          type: string
        receipient:
          type: string
        body:
          type: string
    UpdateTagRequest:
      type: object
      properties:
        name:
          type: string
        color:
          type: string
    UserRole:
      type: string
      enum:
        - TEACHER
        - STUDENT
        - GUARDIAN
        - SCHOOL
        - ADMIN
servers:
  - url: https://notification-service-ms-app.fly.dev/
    description: Server Root Endpoint
    variables: {}